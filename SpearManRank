import java.util.*;
public class Main {
	public static void main(String[] args) {
		System.out.println("===Supear Man Rank ===");
		supearManRank();
		
	}
	public static void supearManRank(){
	    Scanner s = new Scanner(System.in);
	    System.out.print("Enter the length: ");
	    int lengthxy = s.nextInt();
	    
	    int[] x = new int[lengthxy]; 
	    int[] y = new int[lengthxy];
	    inputs(x, y);
	    rank(x, y);
	     
	    
	}
	public static void inputs(int[]x, int[] y){
	      Scanner s = new Scanner(System.in);
	      System.out.println("Enter the X");
	      for(int i = 0; i < x.length; i++){
	          System.out.print("Value" + (i+1) + ": ");
	          x[i] = s.nextInt();
	      }
	      System.out.println();
	      System.out.println("Enter the Y");
	      for(int i = 0; i < y.length; i++){
	          System.out.print("Value" + (i+1) + ": ");
	          y[i] = s.nextInt();
	      }
	}
	public static void rank(int[] x, int[] y){
	   double[] Rx = new double[x.length];
	   double[] Ry = new double[y.length];
	   
	   int max;
	   double index = 1;
	   int prvMax = 0;
	   int prvLength = 0;
	   //
	   for(int i = 0; i < Rx.length; i++){
	      max = 0;	      
	      for(int j = 0; j < x.length; j++) {
	          if(x[j] > max){
	              max = x[j];
	        }	          
	      }
	      if(prvMax == max){
	          for(int j = 0; j < x.length; j++){
    	          if(max == x[j]){
    	              index--;
    	              Rx[prvLength] = index + 0.5;
    	              Rx[j] = index + 0.5;
    	              x[j] = 0;
    	              index += 2;
    	              break;
    	          }
    	      }
	      }else{     
    	      for(int j = 0; j < x.length; j++){
    	          if(max == x[j]){
    	              Rx[j] = index;
    	              prvLength = j;
    	              x[j] = 0;
    	              index++;
    	              break;
    	          }
    	      }
	      }
	      prvMax = max;	      
	   }
	   //
	   int index2 = 1;
	   int prvMax2 = 0;
	   int prvLength2 = 0;
	   for(int i = 0; i < Ry.length; i++){
	      max = 0;    
	      for(int j = 0; j < y.length; j++) {
	          if(y[j] > max){
	              max = y[j];
	        }	          
	      }
	      if(prvMax2 == max){
	          for(int j = 0; j < x.length; j++){
    	          if(max == y[j]){
    	              index2--;
    	              Ry[prvLength2] = index2 + 0.5;
    	              Ry[j] = index2 + 0.5;
    	              y[j] = 0;
    	              index2 += 2;
    	              break;
    	          }
    	      }
	      }else{
    	       for(int j = 0; j < y.length; j++){
    	          if(max == y[j]){
    	              Ry[j] = index2;
    	              prvLength2 = j;
    	              y[j] = 0;
    	              index2++;
    	              break;
    	          }
    	      }
	      }
	      prvMax2 = max;
	   }
	   System.out.println();
	   System.out.println("===Rank 1===");
	   for(int i = 0; i < Rx.length; i++){
	       System.out.println("Rx: " + Rx[i]);
	   }
	   System.out.println();
	   System.out.println("===Rank 2===");
	   for(int i = 0; i < Ry.length; i++){
	         System.out.println("Ry: " + Ry[i]);
	   }
	   differenceBetweenRanks(Rx, Ry);
	}
	//
	public static void differenceBetweenRanks(double[] Rx, double[] Ry){
	    
	    double Ed2 = 0;
	    
	    double[] d = new double[Rx.length];
	    double[] d2 = new double[Ry.length];
	    
	    for(int i = 0; i < d.length; i++){
	        d[i] = Rx[i] - Ry[i];
	    }
	   System.out.println();
	   System.out.println("===d===");
	   for(int i = 0; i < d.length; i++){
	        System.out.println(d[i]);
	    }
	   
	   for(int i = 0; i < d.length; i++){
	        d2[i] = d[i] * d[i];
	   }
	   System.out.println();
	   System.out.println("===d2===");
	   for(int i = 0; i < d.length; i++){
	        System.out.println(d2[i]);
	        Ed2 += d2[i];
	    } 
	   
	   int length = d2.length;
	   System.out.println();
	    System.out.println("Ed2 = " + Ed2);
	   System.out.println();
	    pFormula(Ed2, length);
	}
	//
	public static void pFormula(double Ed2, int n){
	    double r1, r2, r3, p;
	    
	    r1 = 6 * Ed2;
	    r2 = n * ((n * n) - 1);
	    p = 1 - (r1 / r2);
	    
	    System.out.println();
	    System.out.println("=========");
	    System.out.println("p = " + p);
	    System.out.println("=========");
	    System.out.println();
	    
	    correlation(p);  
	}
	public static void correlation(double result){
	    System.out.println(result);
	    if(result == 1.0 || result == -1.0){
	        System.out.println("Perfect Correlation/Relationships");
	    }else if((result <= 0.99 && result >= 0.75) || (result <= -0.99 && result >= -0.75)){
	        System.out.println("Very High Correlation/Relationships");
	    }else if((result <= 0.74 && result >= 0.50) || (result <= -0.74 && result >= -0.50)){
	        System.out.println("Moderately High Correlation/Relationships");
	    }else if((result <= 0.49 && result >= 0.25) || (result <= -0.49 && result >= -0.25)){
	        System.out.println("Moderately Low Correlation/Relationships");
	    }else if((result <= 0.24 && result >= 0.01) || (result <= -0.24 && result >= -0.01)){
	        System.out.println("Very Low Correlation/Relationships");
	    }else if(result == 0){
	        System.out.println("Zero or No Correlation/Relationships");
	    }
	    
	}
}